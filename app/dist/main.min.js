!function(){angular.module("ys.icebreaker",["angular-storage","ngMaterial","ngSanitize","ui.router"])}(),function(e){"use strict";var r=e.module("ys.icebreaker");r.run(["$http","$log","icebreakerService",function(e,r,t){var i=t.initIcebreaker();i.then(function(){r.info("initialization completed!")})}])}(angular),function(){"use strict";var e=angular.module("ys.icebreaker");e.config(["$stateProvider","$urlRouterProvider",function(e,r){r.otherwise("/game"),e.state("icebreakers",{url:"/icebreakers",templateUrl:"templates/icebreaker/icebreaker-list.html",controller:"icebreakerListController"}),e.state("game",{url:"/game",templateUrl:"templates/icebreaker/icebreaker-game.html",controller:"icebreakerGameController"})}])}(),function(e){"use strict";var r=function(e,r,t,i){t.$on("gameover",function(e){}),t.$on("reset",function(r){var t=e.simple({textContent:"The game was successfully reset.",position:"top right",action:"Dismiss"});e.show(t)}),t.play=function(){var e=i.getRandomIcebreaker();t.icebreaker=e}};r.$inject=["$mdToast","$log","$scope","icebreakerService"],e.module("ys.icebreaker").controller("icebreakerGameController",r)}(angular),function(e){"use strict";var r=function(e,r){};r.$inject=["$scope","icebreakerService"],e.module("ys.icebreaker").controller("icebreakerListController",r)}(angular),function(e){"use strict";var r=function(e,r,t,i){function a(){r.$broadcast("reset"),i.reset()}t.reset=function(r){var t=i.getIcebreakers();if(t.length>0){var n=e.confirm().title("Reset the game?").textContent("There is/are ("+t.length+") question(s) left. Reset?").ariaLabel("Confirm").targetEvent(r).ok("Yes").cancel("No");e.show(n).then(function(){a()},function(){})}else a()}};r.$inject=["$mdDialog","$rootScope","$scope","icebreakerService"],e.module("ys.icebreaker").controller("navController",r)}(angular),function(e,r){"use strict";var t=function(e,t,i,a,n){function o(){t.info("initializing icebreaker service...");var r=a.resolve();return u.icebreakers=n.get("icebreakers"),u.icebreakers||(r=e.get("res/icebreakers.json").then(function(e){t.info('icebreakers was successfully read from the file "icebreakers.json"'),n.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)})),r}function c(){var e=n.get("icebreakers");if(e){var a=e.length-1,o=r.floor(r.random()*a+1);if(-1===a)return t.info("All questions are used, game over. Please reset"),i.$broadcast("gameover"),"No questions left. Please reset.";0===a&&(o=0);var c=e[o];return e.splice(o,1),n.set("icebreakers",e),c}}function s(){var r=e.get("res/icebreakers.json").then(function(e){t.info("Icebreaker was successfully reset. Questions reloaded from file."),n.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)});return r}function l(){return n.get("icebreakers")}var u={};return u.initIcebreaker=o,u.getRandomIcebreaker=c,u.reset=s,u.getIcebreakers=l,u};t.$inject=["$http","$log","$rootScope","$q","store"],e.module("ys.icebreaker").service("icebreakerService",t)}(angular,Math);