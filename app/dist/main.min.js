!function(){angular.module("ys.icebreaker",["angular-storage","ngMaterial","ngSanitize","ui.router"])}(),function(e){"use strict";var r=e.module("ys.icebreaker");r.run(["$http","$log","icebreakerService",function(e,r,t){var a=t.initIcebreaker();a.then(function(){r.info("initialization completed!")})}])}(angular),function(){"use strict";var e=angular.module("ys.icebreaker");e.config(["$stateProvider","$urlRouterProvider",function(e,r){r.otherwise("/game"),e.state("game",{url:"/game",template:"<ys-icebreaker-game></ys-icebreaker-game>",controller:"icebreakerGameController"})}])}(),function(e){"use strict";var r=function(e,r,t,a,i){function n(){a.$broadcast("reset"),i.reset()}a.$on("gameover",function(e){}),a.$on("reset",function(e){var t=r.simple({textContent:"The game was successfully reset.",position:"top right",action:"Dismiss"});r.show(t)}),a.play=function(){var e=i.getRandomIcebreaker();a.icebreaker=e},a.reset=function(r){var t=i.getIcebreakers();if(t.length>0){var a=e.confirm().title("Reset the game?").textContent("There is/are ("+t.length+") question(s) left. Reset?").ariaLabel("Confirm").targetEvent(r).ok("Yes").cancel("No");e.show(a).then(function(){n()},function(){})}else n()}};r.$inject=["$mdDialog","$mdToast","$log","$scope","icebreakerService"],e.module("ys.icebreaker").controller("icebreakerGameController",r)}(angular),function(e){var r=e.module("ys.icebreaker"),t=function(){var e='<div id="side-controls" class="right-align"><a class="btn-floating ys" ng-click="reset($event)"><i class="material-icons">repeat</i></a></div><div class="container center-align"><div class="row"><div class="col s12 m12"><a class="waves-effect waves-light btn-large ys" ng-click="play()">Play</a><div class="card-panel ys" ng-show="icebreaker"><h2 class="white-text" ng-bind="icebreaker"></h2></div></div></div></div>';return{replace:!1,restrict:"E",template:e}};r.directive("ysIcebreakerGame",t)}(angular),function(e,r){"use strict";var t=function(e,t,a,i,n){function s(){t.info("initializing icebreaker service...");var r=i.resolve();return u.icebreakers=n.get("icebreakers"),u.icebreakers||(r=e.get("res/icebreakers.json").then(function(e){t.info('icebreakers was successfully read from the file "icebreakers.json"'),n.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)})),r}function c(){var e=n.get("icebreakers");if(e){var i=e.length-1,s=r.floor(r.random()*i+1);if(-1===i)return t.info("All questions are used, game over. Please reset"),a.$broadcast("gameover"),"No questions left. Please reset.";0===i&&(s=0);var c=e[s];return e.splice(s,1),n.set("icebreakers",e),c}}function o(){var r=e.get("res/icebreakers.json").then(function(e){t.info("Icebreaker was successfully reset. Questions reloaded from file."),n.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)});return r}function l(){return n.get("icebreakers")}var u={};return u.initIcebreaker=s,u.getRandomIcebreaker=c,u.reset=o,u.getIcebreakers=l,u};t.$inject=["$http","$log","$rootScope","$q","store"],e.module("ys.icebreaker").service("icebreakerService",t)}(angular,Math);