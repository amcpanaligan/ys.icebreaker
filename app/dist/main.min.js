!function(){angular.module("ys.icebreaker",["angular-storage","ngMaterial","ngSanitize","ui.router"])}(),function(e){"use strict";var r=e.module("ys.icebreaker");r.run(["$http","$log","icebreakerService",function(e,r,t){var n=t.initIcebreaker();n.then(function(){r.info("initialization completed!")})}])}(angular),function(){"use strict";var e=angular.module("ys.icebreaker");e.config(["$stateProvider","$urlRouterProvider",function(e,r){r.otherwise("/game"),e.state("game",{url:"/game",templateUrl:"templates/icebreaker-game.html",controller:"icebreakerGameController"})}])}(),function(e){"use strict";var r=function(e,r,t,n,a){function i(){n.$broadcast("reset"),a.reset()}n.$on("gameover",function(e){}),n.$on("reset",function(e){var t=r.simple({textContent:"The game was successfully reset.",position:"top right",action:"Dismiss"});r.show(t)}),n.play=function(){var e=a.getRandomIcebreaker();n.icebreaker=e},n.reset=function(r){var t=a.getIcebreakers();if(t.length>0){var n=e.confirm().title("Reset the game?").textContent("There is/are ("+t.length+") question(s) left. Reset?").ariaLabel("Confirm").targetEvent(r).ok("Yes").cancel("No");e.show(n).then(function(){i()},function(){})}else i()}};r.$inject=["$mdDialog","$mdToast","$log","$scope","icebreakerService"],e.module("ys.icebreaker").controller("icebreakerGameController",r)}(angular),function(e,r){"use strict";var t=function(e,t,n,a,i){function o(){t.info("initializing icebreaker service...");var r=a.resolve();return l.icebreakers=i.get("icebreakers"),l.icebreakers||(r=e.get("res/icebreakers.json").then(function(e){t.info('icebreakers was successfully read from the file "icebreakers.json"'),i.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)})),r}function s(){var e=i.get("icebreakers");if(e){var a=e.length-1,o=r.floor(r.random()*a+1);if(-1===a)return t.info("All questions are used, game over. Please reset"),n.$broadcast("gameover"),"No questions left. Please reset.";0===a&&(o=0);var s=e[o];return e.splice(o,1),i.set("icebreakers",e),s}}function c(){var r=e.get("res/icebreakers.json").then(function(e){t.info("Icebreaker was successfully reset. Questions reloaded from file."),i.set("icebreakers",e.data)},function(e){t.warn("icebreakers.json get error",e)});return r}function u(){return i.get("icebreakers")}var l={};return l.initIcebreaker=o,l.getRandomIcebreaker=s,l.reset=c,l.getIcebreakers=u,l};t.$inject=["$http","$log","$rootScope","$q","store"],e.module("ys.icebreaker").service("icebreakerService",t)}(angular,Math);